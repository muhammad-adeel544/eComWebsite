{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/eComWebsite/src/components/profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, FormControl, InputLabel, Typography, Button } from \"@mui/material\";\nimport { styled } from '@mui/system';\nimport { useFormik } from 'formik';\nimport { Link } from '@mui/material';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  // const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  // const [loading, setLoading] = useState(false);\n  // const users = useSelector((state) => state.getuser?.getusers);\n\n  const [name, setname] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [interest, setInterest] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [billingInfo, setBillingInfo] = useState(\"\");\n  const StyledTypography = styled(Typography)({\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    marginBottom: 5\n  });\n  const StyledButton = styled(Button)({\n    width: '100%',\n    marginTop: '1rem'\n  });\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleSubmit,\n    handleBlur\n  } = useFormik({\n    initialValues: {\n      name: '',\n      username: '',\n      email: '',\n      interest: '',\n      location: '',\n      billingInfo: ''\n    },\n    // validationSchema: crudopeUser,\n    onSubmit: async values => {\n      //     const [username, setusername] = useState(\"\");\n      // const [email, setEmail] = useState(\"\");\n      // const [password, setpassword] = useState(\"\");\n      // const [rePassword, setrePassword] = useState(\"\");\n      // const dispatch = useDispatch();\n      //     e.preventDefault();\n      //     if (password !== rePassword) {\n      //       toast.error(\"Password does not match\");\n      //     } else {\n      //       signup(dispatch, { username, email, password });\n      //       setusername(\"\");\n      //       setEmail(\"\");\n      //       setpassword(\"\");\n      //       setrePassword(\"\");\n      //       redirect(\"/signup\")\n      //     }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      backgroundImage: \"linear-gradient(to right, rgba(132, 250, 176, 0.5), rgba(143, 211, 244, 0.5))\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: 550,\n        backgroundColor: 'white',\n        padding: '2rem',\n        margin: \".5rem\",\n        borderRadius: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          marginBottom: '1.5rem'\n        },\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"name\",\n            sx: {\n              marginRight: '1rem',\n              minWidth: '120px',\n              alignSelf: 'center'\n            },\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"name\",\n              name: \"name\",\n              variant: \"outlined\",\n              value: values.name,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              error: errors.name && touched.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"1I5FDhkMJ2ZXJmhjmhhzNPn6XM0=\", false, function () {\n  return [useFormik];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","Box","TextField","FormControl","InputLabel","Typography","Button","styled","useFormik","Link","GoogleMap","LoadScript","jsxDEV","_jsxDEV","Profile","_s","name","setname","username","setusername","email","setEmail","interest","setInterest","location","setLocation","billingInfo","setBillingInfo","StyledTypography","textTransform","textAlign","marginBottom","StyledButton","width","marginTop","values","errors","touched","handleChange","handleSubmit","handleBlur","initialValues","onSubmit","sx","display","alignItems","justifyContent","minHeight","backgroundImage","children","maxWidth","backgroundColor","padding","margin","borderRadius","variant","fileName","_jsxFileName","lineNumber","columnNumber","style","flexDirection","htmlFor","marginRight","minWidth","alignSelf","fullWidth","id","value","onChange","onBlur","error","type","color","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/eComWebsite/src/components/profile.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, TextField, FormControl, InputLabel, Typography ,Button} from \"@mui/material\";\nimport { styled } from '@mui/system';\nimport { useFormik } from 'formik';\nimport { Link } from '@mui/material';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\n\nconst Profile = () => {\n  // const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  // const [loading, setLoading] = useState(false);\n  // const users = useSelector((state) => state.getuser?.getusers);\n\n  const [name, setname] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [interest, setInterest] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [billingInfo, setBillingInfo] = useState(\"\");\n  const StyledTypography = styled(Typography)({\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    marginBottom: 5,\n  });\n\n  const StyledButton = styled(Button)({\n    width: '100%',\n    marginTop: '1rem',\n  });\n\n\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleSubmit,\n    handleBlur,\n  } = useFormik({\n    initialValues: {\n      name: '',\n      username: '',\n      email: '',\n      interest: '',\n      location: '',\n      billingInfo: '',\n    },\n    // validationSchema: crudopeUser,\n    onSubmit: async (values) => {\n  //     const [username, setusername] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setpassword] = useState(\"\");\n  // const [rePassword, setrePassword] = useState(\"\");\n  // const dispatch = useDispatch();\n  //     e.preventDefault();\n  //     if (password !== rePassword) {\n  //       toast.error(\"Password does not match\");\n  //     } else {\n  //       signup(dispatch, { username, email, password });\n  //       setusername(\"\");\n  //       setEmail(\"\");\n  //       setpassword(\"\");\n  //       setrePassword(\"\");\n  //       redirect(\"/signup\")\n  //     }\n    },\n  });\n\n  return (\n    <Box\n  sx={{\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh',\n    backgroundImage: \"linear-gradient(to right, rgba(132, 250, 176, 0.5), rgba(143, 211, 244, 0.5))\",\n  }}\n>\n  <Box sx={{ width: '100%', maxWidth: 550, backgroundColor: 'white', padding: '2rem', margin: \".5rem\", borderRadius: '15px' }}>\n    <Typography variant=\"h4\" sx={{ marginBottom: '1.5rem' }}>Profile</Typography>\n    <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column' }}>\n      <Box sx={{ display: 'flex', flexDirection: 'row', marginBottom: '1rem' }}>\n        <InputLabel htmlFor=\"name\" sx={{ marginRight: '1rem', minWidth: '120px', alignSelf: 'center' }}>Name</InputLabel>\n        <FormControl fullWidth>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            variant=\"outlined\"\n            value={values.name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.name && touched.name}\n          />\n        </FormControl>\n      </Box>\n      {/* Repeat the same structure for other fields */}\n      <Box sx={{ textAlign: 'center' }}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save</Button>\n      </Box>\n    </form>\n  </Box>\n</Box>\n\n  );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,UAAU,EAAEC,MAAM,QAAO,eAAe;AAC1F,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,IAAI,QAAQ,eAAe;AACpC,SAASC,SAAS,EAAEC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA;EACA;EACA;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM4B,gBAAgB,GAAGrB,MAAM,CAACF,UAAU,CAAC,CAAC;IAC1CwB,aAAa,EAAE,WAAW;IAC1BC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGzB,MAAM,CAACD,MAAM,CAAC,CAAC;IAClC2B,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb,CAAC,CAAC;EAGF,MAAM;IACJC,MAAM;IACNC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC,YAAY;IACZC;EACF,CAAC,GAAGhC,SAAS,CAAC;IACZiC,aAAa,EAAE;MACbzB,IAAI,EAAE,EAAE;MACRE,QAAQ,EAAE,EAAE;MACZE,KAAK,EAAE,EAAE;MACTE,QAAQ,EAAE,EAAE;MACZE,QAAQ,EAAE,EAAE;MACZE,WAAW,EAAE;IACf,CAAC;IACD;IACAgB,QAAQ,EAAE,MAAOP,MAAM,IAAK;MAC9B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;EAEA,CAAC,CAAC;EAEF,oBACEtB,OAAA,CAACZ,GAAG;IACN0C,EAAE,EAAE;MACFC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,SAAS,EAAE,OAAO;MAClBC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,eAEFpC,OAAA,CAACZ,GAAG;MAAC0C,EAAE,EAAE;QAAEV,KAAK,EAAE,MAAM;QAAEiB,QAAQ,EAAE,GAAG;QAAEC,eAAe,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,gBAC1HpC,OAAA,CAACR,UAAU;QAACkD,OAAO,EAAC,IAAI;QAACZ,EAAE,EAAE;UAAEZ,YAAY,EAAE;QAAS,CAAE;QAAAkB,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC7E9C,OAAA;QAAM6B,QAAQ,EAAEH,YAAa;QAACqB,KAAK,EAAE;UAAEhB,OAAO,EAAE,MAAM;UAAEiB,aAAa,EAAE;QAAS,CAAE;QAAAZ,QAAA,gBAChFpC,OAAA,CAACZ,GAAG;UAAC0C,EAAE,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEiB,aAAa,EAAE,KAAK;YAAE9B,YAAY,EAAE;UAAO,CAAE;UAAAkB,QAAA,gBACvEpC,OAAA,CAACT,UAAU;YAAC0D,OAAO,EAAC,MAAM;YAACnB,EAAE,EAAE;cAAEoB,WAAW,EAAE,MAAM;cAAEC,QAAQ,EAAE,OAAO;cAAEC,SAAS,EAAE;YAAS,CAAE;YAAAhB,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjH9C,OAAA,CAACV,WAAW;YAAC+D,SAAS;YAAAjB,QAAA,eACpBpC,OAAA,CAACX,SAAS;cACRiE,EAAE,EAAC,MAAM;cACTnD,IAAI,EAAC,MAAM;cACXuC,OAAO,EAAC,UAAU;cAClBa,KAAK,EAAEjC,MAAM,CAACnB,IAAK;cACnBqD,QAAQ,EAAE/B,YAAa;cACvBgC,MAAM,EAAE9B,UAAW;cACnB+B,KAAK,EAAEnC,MAAM,CAACpB,IAAI,IAAIqB,OAAO,CAACrB;YAAK;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eAEN9C,OAAA,CAACZ,GAAG;UAAC0C,EAAE,EAAE;YAAEb,SAAS,EAAE;UAAS,CAAE;UAAAmB,QAAA,eAC/BpC,OAAA,CAACP,MAAM;YAACkE,IAAI,EAAC,QAAQ;YAACjB,OAAO,EAAC,WAAW;YAACkB,KAAK,EAAC,SAAS;YAAAxB,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGN,CAAC;AAAC5C,EAAA,CAjGID,OAAO;EAAA,QA+BPN,SAAS;AAAA;AAAAkE,EAAA,GA/BT5D,OAAO;AAmGb,eAAeA,OAAO;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}